package ${package}.${model}.operate.service.impl;


import ${package}.${model}.mapper.${className}Mapper;
import ${package}.${model}.model.${className};
import ${package}.${model}.operate.service.${className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

/**
 * ${tableInfo.comment}实施
 * @auth 曾睿 on ${date(),"yyyy-MM-dd HH:mm:ss"}.
 */
@Service
public class ${className}ServiceImpl extends ${className}Service {

    @Autowired
    private ${className}Mapper ${firstLowCase(className)}Mapper;

    /**
     * 查询部门信息，生成树形菜单
     *
     * @param ${firstLowCase(className)}SearchVo 查询条件视图
     * @return 返回部门列表 响应结果
     */
    @Override
    public List<${className}> select${className}(${className}SearchVo ${firstLowCase(className)}SearchVo) {
        // TODO: ${date(),"yyyy-MM-dd HH:mm:ss"}  曾睿 添加部门数创建数据生成
        Example example = new Example(${className}.class);
        return ${firstLowCase(className)}Mapper.selectByExample(example);
    }

    /**
    * 新增、启用、停用、删除（逻辑阐述）部门
    *
    * @param ${firstLowCase(className)}UpdateVos 操作数据视图
    * @return 返回操作成功数量
    */
    @Override
    public int update${className}s(List<${className}UpdateVo> ${firstLowCase(className)}UpdateVos) {
        // TODO: ${date(),"yyyy-MM-dd HH:mm:ss"} 曾睿 部门新增、启用、停用、删除
        // 新增列表
        List<${className}> insertList = new ArrayList<${className}>();
        // 更新列表
        List<${className}> updateList = new ArrayList<${className}>();
        ${className} ${firstLowCase(className)};
        for (int i = 0,size = ${firstLowCase(className)}UpdateVos.size(); i < size; i++) {
            // 判断新增、更新
            if (${firstLowCase(className)}UpdateVos.get(i).get${className}Id() == null){
                ${firstLowCase(className)} = new ${className}();
                BeanUtils.copyProperties(${firstLowCase(className)}UpdateVos.get(i),${firstLowCase(className)});
                insertList.add(${firstLowCase(className)});
            } else {
                ${firstLowCase(className)} = new ${className}();
                BeanUtils.copyProperties(${firstLowCase(className)}UpdateVos.get(i),${firstLowCase(className)});
                updateList.add(${firstLowCase(className)});
            }
        }
        int i = 0;
        if (insertList.size()>0){
            i += ${firstLowCase(className)}Mapper.insertBatch(insertList);
        }
        if (updateList.size()>0){
            i += ${firstLowCase(className)}Mapper.updateBatch(updateList);
        }
        return i;
    }
}
